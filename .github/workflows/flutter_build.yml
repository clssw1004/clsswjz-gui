name: Build and Release Flutter App

on:
  push:
    tags:
      - "v*"

jobs:
  # 添加一个新的作业来提取发布说明
  extract_release_notes:
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.get_notes.outputs.release_notes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get release notes
        id: get_notes
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION="${VERSION#v}"
          echo "Searching for version: $VERSION"
          
          # 使用更可靠的方式提取发布说明
          {
            echo "release_notes<<EOF"
            awk -v ver="$VERSION" '
              BEGIN { found=0; first=1 }
              /^## \[.*\]/ {
                if (found==1) { exit }
                if ($0 ~ "\\[" ver "\\]") { found=1; first=0; next }
              }
              found==1 { print $0 }
            ' CHANGELOG.md | sed '1{/^$/d}'
            echo "EOF"
          } >> $GITHUB_OUTPUT

  build:
    needs: extract_release_notes
    strategy:
      fail-fast: false
      matrix:
        platform: [windows, linux, android]
        include:
          - platform: windows
            os: windows-latest
            build-command: flutter build windows --release
            artifact-path: build/windows/x64/runner/Release
            artifact-name: clsswjz-${{ github.ref_name }}-windows-x64
            ext: .zip
          - platform: linux
            os: ubuntu-latest
            build-command: flutter build linux --release
            artifact-path: build/linux/x64/release/bundle
            artifact-name: clsswjz-${{ github.ref_name }}-linux-x64
            ext: .zip
          - platform: android
            os: ubuntu-latest
            build-command: flutter build apk --release --no-tree-shake-icons
            artifact-path: build/app/outputs/flutter-apk/app-release.apk
            artifact-name: clsswjz-${{ github.ref_name }}-android-arm64
            ext: .apk

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.7"
          channel: "stable"

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Get dependencies
        run: flutter pub get

      - name: Generate l10n
        run: flutter gen-l10n

      - name: Generate code
        run: |
          dart run build_runner build --delete-conflicting-outputs

      - name: Setup signing config
        if: matrix.platform == 'android'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/clsswjz.keystore
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=clsswjz.keystore" >> android/key.properties

      - name: Build ${{ matrix.platform }}
        run: ${{ matrix.build-command }}

      - name: Create ZIP (Windows)
        if: matrix.platform == 'windows'
        run: |
          cd build/windows/x64/runner/Release
          7z a ../../../../../${{ matrix.artifact-name }}${{ matrix.ext }} *

      - name: Create ZIP (Linux)
        if: matrix.platform == 'linux'
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../../${{ matrix.artifact-name }}${{ matrix.ext }} *

      - name: Copy APK
        if: matrix.platform == 'android'
        run: |
          cp build/app/outputs/flutter-apk/app-release.apk ${{ matrix.artifact-name }}${{ matrix.ext }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}${{ matrix.ext }}
          compression-level: 0

  release:
    needs: [extract_release_notes, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          body: ${{ needs.extract_release_notes.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
